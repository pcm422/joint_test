version: '3.8'

services:
  app:
    container_name: myproject_app_prod
    # Docker Hub에서 이미지 가져오기 (CI/CD에서 빌드 후 푸시한 이미지)
    image: pcm0422/myproject:latest # 실제 Docker Hub 이미지 경로로 변경
    build: # 이미지가 없을 경우 로컬에서 빌드 (선택 사항)
      context: .
      dockerfile: Dockerfile
      # target: production # 멀티 스테이지 빌드 시 프로덕션 target 지정 가능
    env_file:
      - .env.prod # 서버용 환경 변수 파일 로드
    environment:
      - PYTHONUNBUFFERED=1
    # Gunicorn 실행 커맨드
    command: poetry run gunicorn -k uvicorn.workers.UvicornWorker -w 4 -b 0.0.0.0:8000 app.main:app
    # 로컬과 달리 코드 볼륨 마운트는 하지 않음 (이미지 사용)
    # 정적/미디어 파일 볼륨 (Nginx와 공유해야 함)
    volumes:
       - static_volume:/app/static # 예시
       - media_volume:/app/media # 예시
    expose:
      - 8000 # Nginx에서 접근할 포트 (외부 노출 X)
    restart: unless-stopped
    # depends_on 불필요 (Nginx가 app 시작 기다릴 필요 없음, upstream으로 처리)

  nginx:
    container_name: myproject_nginx_prod
    image: nginx:1.25-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro # 읽기 전용 마운트
      - static_volume:/app/static:ro # 앱 컨테이너와 공유 (읽기 전용)
      - media_volume:/app/media:ro # 앱 컨테이너와 공유 (읽기 전용)
      - certbot_conf:/etc/letsencrypt # Certbot 설정 공유
      - ./certbot/www:/var/www/certbot # Certbot ACME challenge 공유
    depends_on:
      - app # 앱이 실행된 후 Nginx가 프록시하도록 (선택적)
    restart: unless-stopped

  certbot:
    container_name: myproject_certbot_prod
    image: certbot/certbot:latest
    volumes:
      - certbot_conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    # 처음 인증서 받을 때 & 갱신 시 실행할 명령어 (수동 실행 또는 스케줄링)

volumes:
  static_volume: # 정적 파일용 볼륨
  media_volume: # 미디어 파일용 볼륨
  certbot_conf: